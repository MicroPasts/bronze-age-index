{"version":3,"file":"component---src-templates-bronze-age-js-d8197d3df916b243d48d.js","mappings":"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","sources":["webpack://bronze-age-index/./src/components/structure/SEO.js","webpack://bronze-age-index/./src/hooks/use-site-metadata.js","webpack://bronze-age-index/./src/components/structure/pagination.js","webpack://bronze-age-index/./src/components/structure/post-card.js","webpack://bronze-age-index/./src/templates/bronze-age.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/Card.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/CardImg.js","webpack://bronze-age-index/./node_modules/dom-helpers/esm/camelize.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/createWithBsPrefix.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\"\nimport { useSiteMetadata } from \"../../hooks/use-site-metadata\"\n\nfunction createSeoImage(featured, image) {\n    if (featured) {\n        return featured?.childImageSharp.gatsbyImageData.images.fallback.src;\n    }\n    return image;\n}\n\nconst Seo = ({ title, description, pathname, children, featured }) => {\n    const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterHandle } = useSiteMetadata()\n    const featuredImage = createSeoImage(featured,image);\n    const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        image: `${siteUrl}${featuredImage}`,\n        url: `${siteUrl}${pathname || ``}`,\n        twitterHandle,\n    }\n\n    return (\n        <>\n            <title>{seo.title}</title>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            <meta name=\"twitter:title\" content={seo.title} />\n            <meta name=\"twitter:url\" content={seo.url} />\n            <meta name=\"twitter:description\" content={seo.description} />\n            <meta name=\"twitter:image\" content={seo.image} />\n            <meta name=\"twitter:creator\" content={seo.twitterHandle} />\n            <meta property=\"og:url\" content={seo.url.toString()} />\n            <meta property=\"og:title\" content={seo.title} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:site_name\" content=\"Museologi.st\" />\n            <meta property=\"og:description\" content={seo.description} />\n            <meta property=\"og:locale\" content=\"en-gb\" />\n            <meta property=\"og:image\" content={seo.image.toString()} />\n            <meta property=\"og:image:alt\" content=\"An image representing this post\" />\n            <meta property=\"og:image:width\" content=\"600\"/>\n            <meta property=\"og:image:width\" content=\"600\" />\n            <meta property=\"og:image:type\" content=\"image/jpeg\" />\n            {children}\n        </>\n    )\n}\n\nexport default Seo","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterHandle\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n    return data.site.siteMetadata\n}","import React from 'react'\nimport PropType from \"prop-types\";\nimport {Link} from \"gatsby\";\nimport {Container} from \"react-bootstrap\";\n\nexport default function Pagination(props) {\n\n    const {pageContext} = props;\n    const {pageNumber, numberOfPages, humanPageNumber, previousPagePath, nextPagePath} = pageContext;\n    return (\n            <Container>\n                <nav className=\"pagination py-2\">\n                    {humanPageNumber > 1 ? (\n                            <Link\n                                title=\"Go to previous page\"\n                                to={previousPagePath}>\n                                ← Previous\n                            </Link>) :\n                        <span/>}\n                    <strong>Page {pageNumber + 1} of {numberOfPages}</strong>\n                    {humanPageNumber < numberOfPages ? (\n                            <Link\n                                title=\"Go to next page\"\n                                to={nextPagePath}>\n                                Next →\n                            </Link>) :\n                        <span/>}\n                </nav>\n            </Container>\n    )\n\n}\n\n\nPagination.propType = {\n    pageContext: PropType.object.isRequired,\n}","import React from \"react\"\nimport {Card, Col,CardImg} from 'react-bootstrap';\nimport {Link} from \"gatsby\"\n\nconst PostCard = ({post}) => (\n    <Col md={3} className=\"mb-3\">\n        <Card className=\"border-0 bg-light\">\n\n            <Card.Body className=\"bg-white border-0 rounded-0\">\n                {post.thumbnail !== null &&\n                    <CardImg className=\"card-img-top rounded-0 square\" src={post.thumbnail.publicURL} alt={\"Object image\"} width={150} height={150}/>\n                }\n                {post.thumbnail === null &&\n                  <Card.Img src={'/img.png'} alt=\"Card image\" width={150} height={150}/>\n                }\n                <div className=\"h-100\">\n                    <Link to={'/records/' + post.objectID} className=\"stretched-link stretched-link__blog_post\">\n                        <h1 className=\"lead text-black fw-bold mt-3\">{post.objectType}</h1>\n                    </Link>\n                        <h2 className=\"lead\">{post.objectID.toUpperCase()}</h2>\n                </div>\n\n            </Card.Body>\n        </Card>\n    </Col>\n)\n\nexport default PostCard\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport PostCard from \"../components/structure/post-card\";\nimport {graphql} from \"gatsby\"\nimport {Container, Row} from 'react-bootstrap';\nimport Seo from \"../components/structure/SEO\"\n\nimport Pagination from '../components/structure/pagination';\n\nconst BronzePageTemplate = (props) => {\n    const Posts = props.data.allSplitCsv.edges.map(edge => <PostCard key={edge.node.id} post={edge.node}/>)\n    return (\n        <Layout>\n            <Container className={\"content\"}>\n                <Row>\n                    <h1 className={\"ml-4 mt-4\"}>The Bronze Age Implement Index</h1>\n\n                </Row>\n                <Row>\n                    {Posts}\n                </Row>\n            </Container>\n            <Container fluid className={\"mx-auto text-center bg-pastel\"}>\n                <Pagination pageContext={props.pageContext} />\n            </Container>\n        </Layout>\n    );\n}\nexport default BronzePageTemplate\n\nexport const pageQuery = graphql`\n    query($skip: Int!, $limit: Int!) {\n        allSplitCsv(\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    objectID\n                    objectType\n                    thumbnail {\n                        publicURL\n\n                    }\n                }\n            }\n        }\n    }\n`\nexport const Head = () => (\n    <Seo title={\"The Bronze Age Index paginated\"} description={\"The Bronze Age Index paginated\"}/>\n)\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["title","description","pathname","children","featured","defaultTitle","defaultDescription","image","siteUrl","twitterHandle","useStaticQuery","site","siteMetadata","featuredImage","childImageSharp","gatsbyImageData","images","fallback","src","createSeoImage","seo","url","name","content","property","toString","Pagination","props","pageContext","pageNumber","numberOfPages","humanPageNumber","previousPagePath","nextPagePath","className","Link","to","propType","PropType","post","Col","md","Card","thumbnail","CardImg","publicURL","alt","width","height","objectID","objectType","toUpperCase","Posts","data","allSplitCsv","edges","map","edge","key","node","id","Container","Row","fluid","Head","context","displayName","CardHeader","bsPrefix","as","Component","ref","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","variant","rHyphen","pascalCase","str","string","replace","_","chr","slice","BsComponent","Tag","resolvedPrefix","p"],"sourceRoot":""}