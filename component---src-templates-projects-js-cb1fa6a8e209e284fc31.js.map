{"version":3,"file":"component---src-templates-projects-js-cb1fa6a8e209e284fc31.js","mappings":"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","sources":["webpack://bronze-age-index/./src/components/structure/pagination.js","webpack://bronze-age-index/./src/components/structure/project-card.js","webpack://bronze-age-index/./src/templates/projects.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/Card.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/CardImg.js","webpack://bronze-age-index/./node_modules/dom-helpers/esm/camelize.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/createWithBsPrefix.js","webpack://bronze-age-index/./node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from 'react'\nimport PropType from \"prop-types\";\nimport {Link} from \"gatsby\";\nimport {Container} from \"react-bootstrap\";\n\nexport default function Pagination(props) {\n\n    const {pageContext} = props;\n    const {pageNumber, numberOfPages, humanPageNumber, previousPagePath, nextPagePath} = pageContext;\n    return (\n            <Container>\n                <nav className=\"pagination py-2\">\n                    {humanPageNumber > 1 ? (\n                            <Link\n                                title=\"Go to previous page\"\n                                to={previousPagePath}>\n                                ← Previous\n                            </Link>) :\n                        <span/>}\n                    <strong>Page {pageNumber + 1} of {numberOfPages}</strong>\n                    {humanPageNumber < numberOfPages ? (\n                            <Link\n                                title=\"Go to next page\"\n                                to={nextPagePath}>\n                                Next →\n                            </Link>) :\n                        <span/>}\n                </nav>\n            </Container>\n    )\n\n}\n\n\nPagination.propType = {\n    pageContext: PropType.object.isRequired,\n}","import React from \"react\"\nimport {Card, Col,CardImg} from 'react-bootstrap';\nimport {Link} from \"gatsby\"\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nconst ProjectCard = ({post}) => (\n    <Col md={4} className=\"mb-3\">\n        <Card className=\"border-0 bg-light\">\n\n            <Card.Body className=\"bg-white border-0 rounded-0\">\n                {post.thumbnail !== null &&\n                    <CardImg className=\"card-img-top rounded-0\"\n                             as={GatsbyImage} image={getImage(post.cover)} alt={post.frontmatter.title}/>\n                }\n                {post.thumbnail === null && <Card.Img src={'/img.png'} alt=\"Card image\" width={300} height={300}/>}\n                <div className=\"h-100\" style={{minHeight: 70}}>\n                    <Link to={'/projects/' + post.frontmatter.slug} className=\"stretched-link stretched-link__blog_post\">\n                        <h1 className=\"lead text-black fw-bold mt-3\">{post.frontmatter.title}</h1>\n                    </Link>\n                </div>\n\n            </Card.Body>\n        </Card>\n    </Col>\n)\n\nexport default ProjectCard","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport ProjectCard from \"../components/structure/project-card\";\nimport {graphql} from \"gatsby\"\nimport {Container, Row} from 'react-bootstrap';\nimport Seo from \"../components/seo\"\n\nimport Pagination from '../components/structure/pagination';\n\nconst ProjectsPageTemplate = (props) => {\n    const Posts = props.data.allMarkdownRemark.edges.map(edge => <ProjectCard key={edge.node.id} post={edge.node}/>)\n    return (\n        <Layout>\n            <Container className={\"content\"}>\n                <Row>\n                    <h1 className={\"ml-4 mt-4\"}>The Citizen Science Projects behind the index</h1>\n                </Row>\n                <Row>\n                    {Posts}\n                </Row>\n            </Container>\n            <Container fluid className={\"mx-auto text-center bg-pastel\"}>\n                <Pagination pageContext={props.pageContext} />\n            </Container>\n        </Layout>\n    );\n}\nexport default ProjectsPageTemplate\n\nexport const pageQuery = graphql`\n    query($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            filter: {frontmatter: {section: {eq: \"projects\"}}}\n            sort: {frontmatter: {title: ASC}}\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        flickrURL\n                        micropastsURL\n                        slug\n                        coverImage\n                        created\n                        tasks\n                    }\n                    cover{\n                            childImageSharp {\n                                id\n                               gatsbyImageData(\n                                    placeholder: BLURRED\n                                    height: 300\n                                    formats: [AUTO, WEBP]\n                                    width: 300\n                                    quality: 80\n                                    transformOptions: {grayscale: false, fit: COVER, cropFocus:\n                                    CENTER}\n                                )\n                            }\n                        }\n                }\n            }\n        }\n    }\n`\nexport const Head = () => (\n    <Seo title={\"The Bronze Age Index Cit Sci projects\"} description={\"The Bronze Age Index citizen science projects paginated\"}/>\n)\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["Pagination","props","pageContext","pageNumber","numberOfPages","humanPageNumber","previousPagePath","nextPagePath","className","Link","title","to","propType","PropType","post","Col","md","Card","thumbnail","CardImg","as","GatsbyImage","image","getImage","cover","alt","frontmatter","src","width","height","style","minHeight","slug","Posts","data","allMarkdownRemark","edges","map","edge","key","node","id","Container","Row","fluid","Head","description","context","displayName","CardHeader","bsPrefix","Component","ref","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","variant","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","BsComponent","Tag","resolvedPrefix","p"],"sourceRoot":""}